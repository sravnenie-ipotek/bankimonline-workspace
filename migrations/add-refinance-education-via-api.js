const axios = require('axios');

const API_BASE = 'http://localhost:8003/api/content';

// Education content to add
const educationContent = [
  {
    content_key: 'refinance_step2_education',
    component_type: 'field_label',
    screen_location: 'refinance_step2',
    category: 'personal_details',
    description: 'Education dropdown label',
    translations: {
      en: 'Education',
      he: '◊î◊©◊õ◊ú◊î',
      ru: '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ'
    }
  },
  {
    content_key: 'refinance_step2_education_ph',
    component_type: 'placeholder',
    screen_location: 'refinance_step2',
    category: 'personal_details',
    description: 'Education dropdown placeholder',
    translations: {
      en: 'Select education level',
      he: '◊ë◊ó◊® ◊®◊û◊™ ◊î◊©◊õ◊ú◊î',
      ru: '–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è'
    }
  },
  {
    content_key: 'refinance_step2_education_option_1',
    component_type: 'option',
    screen_location: 'refinance_step2',
    category: 'personal_details',
    description: 'Education option 1 - No high school certificate',
    translations: {
      en: 'No high school certificate',
      he: '◊ú◊ú◊ê ◊™◊¢◊ï◊ì◊™ ◊ë◊í◊®◊ï◊™',
      ru: '–ë–µ–∑ –∞—Ç—Ç–µ—Å—Ç–∞—Ç–∞ —Å—Ä–µ–¥–Ω–µ–π —à–∫–æ–ª—ã'
    }
  },
  {
    content_key: 'refinance_step2_education_option_2',
    component_type: 'option',
    screen_location: 'refinance_step2',
    category: 'personal_details',
    description: 'Education option 2 - Partial high school certificate',
    translations: {
      en: 'Partial high school certificate',
      he: '◊™◊¢◊ï◊ì◊™ ◊ë◊í◊®◊ï◊™ ◊ó◊ú◊ß◊ô◊™',
      ru: '–ß–∞—Å—Ç–∏—á–Ω—ã–π –∞—Ç—Ç–µ—Å—Ç–∞—Ç —Å—Ä–µ–¥–Ω–µ–π —à–∫–æ–ª—ã'
    }
  },
  {
    content_key: 'refinance_step2_education_option_3',
    component_type: 'option',
    screen_location: 'refinance_step2',
    category: 'personal_details',
    description: 'Education option 3 - Full high school certificate',
    translations: {
      en: 'Full high school certificate',
      he: '◊™◊¢◊ï◊ì◊™ ◊ë◊í◊®◊ï◊™ ◊û◊ú◊ê◊î',
      ru: '–ü–æ–ª–Ω—ã–π –∞—Ç—Ç–µ—Å—Ç–∞—Ç —Å—Ä–µ–¥–Ω–µ–π —à–∫–æ–ª—ã'
    }
  },
  {
    content_key: 'refinance_step2_education_option_4',
    component_type: 'option',
    screen_location: 'refinance_step2',
    category: 'personal_details',
    description: 'Education option 4 - Post-secondary education',
    translations: {
      en: 'Post-secondary education',
      he: '◊î◊©◊õ◊ú◊î ◊¢◊ú-◊™◊ô◊õ◊ï◊†◊ô◊™',
      ru: '–ü–æ—Å–ª–µ—à–∫–æ–ª—å–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ'
    }
  },
  {
    content_key: 'refinance_step2_education_option_5',
    component_type: 'option',
    screen_location: 'refinance_step2',
    category: 'personal_details',
    description: 'Education option 5 - Bachelor\'s degree',
    translations: {
      en: 'Bachelor\'s degree',
      he: '◊™◊ï◊ê◊® ◊®◊ê◊©◊ï◊ü',
      ru: '–°—Ç–µ–ø–µ–Ω—å –±–∞–∫–∞–ª–∞–≤—Ä–∞'
    }
  },
  {
    content_key: 'refinance_step2_education_option_6',
    component_type: 'option',
    screen_location: 'refinance_step2',
    category: 'personal_details',
    description: 'Education option 6 - Master\'s degree',
    translations: {
      en: 'Master\'s degree',
      he: '◊™◊ï◊ê◊® ◊©◊†◊ô',
      ru: '–°—Ç–µ–ø–µ–Ω—å –º–∞–≥–∏—Å—Ç—Ä–∞'
    }
  },
  {
    content_key: 'refinance_step2_education_option_7',
    component_type: 'option',
    screen_location: 'refinance_step2',
    category: 'personal_details',
    description: 'Education option 7 - Doctoral degree',
    translations: {
      en: 'Doctoral degree',
      he: '◊™◊ï◊ê◊® ◊©◊ú◊ô◊©◊ô',
      ru: '–î–æ–∫—Ç–æ—Ä—Å–∫–∞—è —Å—Ç–µ–ø–µ–Ω—å'
    }
  }
];

async function addContentViaAPI() {
  console.log('üöÄ Starting Refinance Step 2 Education Migration via API...');
  
  let successCount = 0;
  let errorCount = 0;
  
  for (const content of educationContent) {
    try {
      console.log(`‚è≥ Adding: ${content.content_key}...`);
      
      const response = await axios.post(API_BASE, content);
      
      if (response.data.status === 'success') {
        console.log(`‚úÖ Success: ${content.content_key} (ID: ${response.data.content_item_id})`);
        successCount++;
      } else {
        console.log(`‚ùå Failed: ${content.content_key} - ${response.data.message}`);
        errorCount++;
      }
      
    } catch (error) {
      console.error(`‚ùå Error adding ${content.content_key}:`, error.response?.data?.message || error.message);
      errorCount++;
    }
  }
  
  console.log('\nüìä Migration Summary:');
  console.log(`‚úÖ Successfully added: ${successCount} items`);
  console.log(`‚ùå Failed: ${errorCount} items`);
  
  if (successCount > 0) {
    console.log('\nüîç Verifying migration...');
    try {
      const verifyResponse = await axios.get(`${API_BASE}/refinance_step2/he`);
      const contentCount = verifyResponse.data.content_count;
      console.log(`‚úÖ API now returns ${contentCount} content items for refinance_step2`);
      
      if (contentCount > 1) {
        console.log('üéâ Migration successful! Education dropdown should now work.');
      } else {
        console.log('‚ö†Ô∏è  Content count still low - may need to restart server');
      }
    } catch (error) {
      console.error('‚ùå Error verifying migration:', error.message);
    }
  }
}

// Run the migration
addContentViaAPI().catch(console.error); 