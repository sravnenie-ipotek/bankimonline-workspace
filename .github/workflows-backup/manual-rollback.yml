name: 🚨 Emergency Production Rollback

on:
  workflow_dispatch:
    inputs:
      rollback_to_commit:
        description: 'Commit hash to rollback to (leave empty for previous deployment)'
        required: false
        type: string
      confirmation:
        description: 'Type "CONFIRM ROLLBACK" to proceed'
        required: true
        type: string
      reason:
        description: 'Reason for rollback'
        required: true
        type: string

env:
  NODE_VERSION: '20'

jobs:
  validate-rollback:
    name: 🔍 Validate Rollback Request
    runs-on: ubuntu-latest
    outputs:
      target_commit: ${{ steps.validate.outputs.target_commit }}
      can_proceed: ${{ steps.validate.outputs.can_proceed }}
    steps:
      - name: 🔍 Validate confirmation
        id: validate
        run: |
          if [ "${{ github.event.inputs.confirmation }}" != "CONFIRM ROLLBACK" ]; then
            echo "❌ Invalid confirmation. Must type exactly: CONFIRM ROLLBACK"
            exit 1
          fi
          
          TARGET_COMMIT="${{ github.event.inputs.rollback_to_commit }}"
          if [ -z "$TARGET_COMMIT" ]; then
            echo "Using previous deployment commit"
            # Logic to get previous commit would go here
            TARGET_COMMIT="HEAD~1"
          fi
          
          echo "target_commit=$TARGET_COMMIT" >> $GITHUB_OUTPUT
          echo "can_proceed=true" >> $GITHUB_OUTPUT
          
          echo "✅ Rollback validated"
          echo "🎯 Target commit: $TARGET_COMMIT"
          echo "📝 Reason: ${{ github.event.inputs.reason }}"

  emergency-rollback:
    name: 🚨 Execute Emergency Rollback
    runs-on: ubuntu-latest
    needs: validate-rollback
    if: needs.validate-rollback.outputs.can_proceed == 'true'
    environment:
      name: production-rollback
      url: https://bankimonline.com
    steps:
      - name: 📂 Checkout target commit
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.validate-rollback.outputs.target_commit }}

      - name: 🚨 Execute Production Rollback
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          timeout: 300s
          script: |
            set -euo pipefail
            
            echo "🚨 EXECUTING EMERGENCY ROLLBACK"
            echo "Target: ${{ needs.validate-rollback.outputs.target_commit }}"
            echo "Reason: ${{ github.event.inputs.reason }}"
            echo "Initiated by: ${{ github.actor }}"
            
            # Execute rollback script
            /opt/bankimonline/scripts/emergency-rollback.sh \
              ${{ needs.validate-rollback.outputs.target_commit }} \
              "${{ github.event.inputs.reason }}" \
              ${{ github.actor }}

      - name: 🏥 Post-Rollback Health Check
        run: |
          echo "🏥 Verifying rollback health..."
          sleep 30
          
          # Critical health checks
          curl -f https://bankimonline.com/api/health
          curl -f https://bankimonline.com/api/v1/calculation-parameters?business_path=mortgage
          
          echo "✅ Rollback health check passed"

      - name: 📢 Rollback Notification
        run: |
          echo "🚨 PRODUCTION ROLLBACK EXECUTED"
          echo "🎯 Rolled back to: ${{ needs.validate-rollback.outputs.target_commit }}"
          echo "📝 Reason: ${{ github.event.inputs.reason }}"
          echo "👤 Executed by: ${{ github.actor }}"
          echo "⏰ Time: $(date -u +%Y-%m-%dT%H:%M:%SZ)"
          
          # Critical notification
          curl -X POST "${{ secrets.ROLLBACK_WEBHOOK }}" \
            -H "Content-Type: application/json" \
            -d '{
              "text": "🚨 PRODUCTION ROLLBACK EXECUTED!",
              "commit": "${{ needs.validate-rollback.outputs.target_commit }}",
              "reason": "${{ github.event.inputs.reason }}",
              "executor": "${{ github.actor }}",
              "timestamp": "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"
            }' || echo "Notification webhook failed"