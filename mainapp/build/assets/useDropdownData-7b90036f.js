var G=Object.defineProperty;var M=(o,e,r)=>e in o?G(o,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):o[e]=r;var T=(o,e,r)=>(M(o,typeof e!="symbol"?e+"":e,r),r);import{r as a}from"./react-vendor-ede63a09.js";import{u as U}from"./i18n-vendor-aaeace9f.js";class J{constructor(){T(this,"cache",new Map);T(this,"TTL",5*60*1e3)}set(e,r){const h=Date.now();this.cache.set(e,{data:r,timestamp:h,expires:h+this.TTL})}get(e){const r=this.cache.get(e);return r?Date.now()>r.expires?(this.cache.delete(e),null):r.data:null}clear(){this.cache.clear()}size(){return this.cache.size}}const A=new J,X=(o,e,r="options")=>{const{i18n:h}=U(),[C,E]=a.useState(!0),[p,b]=a.useState(null),[d,f]=a.useState({options:[],placeholder:void 0,label:void 0,loading:!0,error:null}),s=a.useRef(null),_=h.language||"en",w=a.useCallback(async()=>{var c,u,l,v,K,m,I,x,S,j;try{E(!0),b(null),s.current&&s.current.abort(),s.current=new AbortController;const i=`dropdown_${o}_${_}`,y=A.get(i);let n;if(y)console.log(`✅ Cache hit for ${i}`),n=y;else{console.log(`🌐 Fetching dropdown data from API: /api/dropdowns/${o}/${_}`);const $=await fetch(`/api/dropdowns/${o}/${_}`,{signal:s.current.signal});if(!$.ok)throw new Error(`HTTP ${$.status}: ${$.statusText}`);if(n=await $.json(),n.status!=="success")throw new Error(`API Error: ${n.status}`);A.set(i,n),console.log(`💾 Cached dropdown data for ${i}`)}let g=`${o}_${e}`,B=`${g}_ph`,R=`${g}_label`,k=((c=n.options)==null?void 0:c[g])||[],O=((u=n.placeholders)==null?void 0:u[B])||((l=n.placeholders)==null?void 0:l[g]),H=((v=n.labels)==null?void 0:v[R])||((K=n.labels)==null?void 0:K[g]);if(k.length===0){const $=e==="field_of_activity"?"activity":e==="activity"?"field_of_activity":null;if($){const D=`${o}_${$}`,q=`${D}_ph`,z=`${D}_label`,F=((m=n.options)==null?void 0:m[D])||[];F.length>0&&(g=D,B=q,R=z,k=F,O=((I=n.placeholders)==null?void 0:I[q])||((x=n.placeholders)==null?void 0:x[D]),H=((S=n.labels)==null?void 0:S[z])||((j=n.labels)==null?void 0:j[D]))}}const P={options:k,placeholder:O,label:H,loading:!1,error:null};console.log(`🔍 Dropdown data for ${g}:`,{optionsCount:P.options.length,hasPlaceholder:!!P.placeholder,hasLabel:!!P.label,cacheHit:!!y}),f(P)}catch(i){if(i.name==="AbortError"){console.log("Request aborted");return}console.warn(`❌ Dropdown API error for ${o}/${e}:`,i);const y=i instanceof Error?i:new Error("Unknown error");b(y),f({options:[],placeholder:void 0,label:void 0,loading:!1,error:y})}finally{E(!1),s.current=null}},[o,e,_]);a.useEffect(()=>(w(),()=>{s.current&&s.current.abort()}),[w]);const t={...d,loading:C,error:p};return r==="options"&&!C&&!p?t.options:t},Y=o=>{const{i18n:e}=U(),[r,h]=a.useState(!0),[C,E]=a.useState(null),[p,b]=a.useState(null),d=a.useRef(null),f=e.language||"en",s=a.useCallback(async()=>{var w;try{h(!0),E(null),d.current&&d.current.abort(),d.current=new AbortController;const t=`dropdown_${o}_${f}`,c=A.get(t);if(c){console.log(`✅ Bulk cache hit for ${t}`),b(c);return}console.log(`🌐 Bulk fetching dropdowns from API: /api/dropdowns/${o}/${f}`);const u=await fetch(`/api/dropdowns/${o}/${f}`,{signal:d.current.signal});if(!u.ok)throw new Error(`HTTP ${u.status}: ${u.statusText}`);const l=await u.json();if(l.status!=="success")throw new Error(`API Error: ${l.status}`);A.set(t,l),b(l),console.log(`✅ Bulk dropdown data loaded for ${o}:`,{dropdowns:((w=l.dropdowns)==null?void 0:w.length)||0,optionGroups:Object.keys(l.options||{}).length,cacheInfo:l.cache_info})}catch(t){if(t.name==="AbortError"){console.log("Bulk request aborted");return}console.warn(`❌ Bulk dropdown API error for ${o}:`,t);const c=t instanceof Error?t:new Error("Unknown error");E(c),b(null)}finally{h(!1),d.current=null}},[o,f]);return a.useEffect(()=>(s(),()=>{d.current&&d.current.abort()}),[s]),{data:p,loading:r,error:C,getDropdownProps:w=>{var c,u,l;if(!p)return{options:[],placeholder:void 0,label:void 0};const t=`${o}_${w}`;return{options:((c=p.options)==null?void 0:c[t])||[],placeholder:(u=p.placeholders)==null?void 0:u[t],label:(l=p.labels)==null?void 0:l[t]}},refresh:s,clearCache:()=>A.clear()}};export{X as a,Y as u};
