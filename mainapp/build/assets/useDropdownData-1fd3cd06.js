var e=Object.defineProperty,r=(r,t,o)=>(((r,t,o)=>{t in r?e(r,t,{enumerable:!0,configurable:!0,writable:!0,value:o}):r[t]=o})(r,"symbol"!=typeof t?t+"":t,o),o);import{r as t}from"./react-vendor-21ec1e1c.js";import{u as o}from"./i18n-vendor-18addd5f.js";const l=new class{constructor(){r(this,"cache",new Map),r(this,"TTL",3e5)}set(e,r){const t=Date.now();this.cache.set(e,{data:r,timestamp:t,expires:t+this.TTL})}get(e){const r=this.cache.get(e);return r?Date.now()>r.expires?(this.cache.delete(e),null):r.data:null}clear(){this.cache.clear()}size(){return this.cache.size}},n=(e,r,n="options")=>{const{i18n:a}=o(),[s,i]=t.useState(!0),[c,u]=t.useState(null),[d,p]=t.useState({options:[],placeholder:void 0,label:void 0,loading:!0,error:null}),h=t.useRef(null),f=a.language||"en",v=t.useCallback(async()=>{var t,o,n,a,s,c,d,v,w,b;try{i(!0),u(null),h.current&&h.current.abort(),h.current=new AbortController;const $=`dropdown_${e}_${f}`,g=l.get($);let _;if(g)_=g;else{const r=await fetch(`/api/dropdowns/${e}/${f}`,{signal:h.current.signal});if(!r.ok)throw new Error(`HTTP ${r.status}: ${r.statusText}`);if(_=await r.json(),"success"!==_.status)throw new Error(`API Error: ${_.status}`);l.set($,_)}let E=`${e}_${r}`,y=`${E}_ph`,m=`${E}_label`,T=(null==(t=_.options)?void 0:t[E])||[],k=(null==(o=_.placeholders)?void 0:o[y])||(null==(n=_.placeholders)?void 0:n[E]),A=(null==(a=_.labels)?void 0:a[m])||(null==(s=_.labels)?void 0:s[E]);if(0===T.length){const t="field_of_activity"===r?"activity":"activity"===r?"field_of_activity":null;if(t){const r=`${e}_${t}`,o=`${r}_ph`,l=`${r}_label`,n=(null==(c=_.options)?void 0:c[r])||[];n.length>0&&(E=r,y=o,m=l,T=n,k=(null==(d=_.placeholders)?void 0:d[o])||(null==(v=_.placeholders)?void 0:v[r]),A=(null==(w=_.labels)?void 0:w[l])||(null==(b=_.labels)?void 0:b[r]))}}p({options:T,placeholder:k,label:A,loading:!1,error:null})}catch($){if("AbortError"===$.name)return;const e=$ instanceof Error?$:new Error("Unknown error");u(e),p({options:[],placeholder:void 0,label:void 0,loading:!1,error:e})}finally{i(!1),h.current=null}},[e,r,f]);t.useEffect(()=>(v(),()=>{h.current&&h.current.abort()}),[v]);const w={...d,loading:s,error:c};return"options"!==n||s||c?w:w.options},a=e=>{const{i18n:r}=o(),[n,a]=t.useState(!0),[s,i]=t.useState(null),[c,u]=t.useState(null),d=t.useRef(null),p=r.language||"en",h=t.useCallback(async()=>{try{a(!0),i(null),d.current&&d.current.abort(),d.current=new AbortController;const r=`dropdown_${e}_${p}`,t=l.get(r);if(t)return void u(t);const o=await fetch(`/api/dropdowns/${e}/${p}`,{signal:d.current.signal});if(!o.ok)throw new Error(`HTTP ${o.status}: ${o.statusText}`);const n=await o.json();if("success"!==n.status)throw new Error(`API Error: ${n.status}`);l.set(r,n),u(n)}catch(r){if("AbortError"===r.name)return;const e=r instanceof Error?r:new Error("Unknown error");i(e),u(null)}finally{a(!1),d.current=null}},[e,p]);t.useEffect(()=>(h(),()=>{d.current&&d.current.abort()}),[h]);return{data:c,loading:n,error:s,getDropdownProps:r=>{var t,o,l;if(!c)return{options:[],placeholder:void 0,label:void 0};const n=`${e}_${r}`;return{options:(null==(t=c.options)?void 0:t[n])||[],placeholder:null==(o=c.placeholders)?void 0:o[n],label:null==(l=c.labels)?void 0:l[n]}},refresh:h,clearCache:()=>l.clear()}};export{n as a,a as u};
