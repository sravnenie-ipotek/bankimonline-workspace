var G=Object.defineProperty;var M=(o,e,r)=>e in o?G(o,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):o[e]=r;var T=(o,e,r)=>(M(o,typeof e!="symbol"?e+"":e,r),r);import{r as a}from"./react-vendor-ede63a09.js";import{u as F}from"./i18n-vendor-aaeace9f.js";class J{constructor(){T(this,"cache",new Map);T(this,"TTL",5*60*1e3)}set(e,r){const f=Date.now();this.cache.set(e,{data:r,timestamp:f,expires:f+this.TTL})}get(e){const r=this.cache.get(e);return r?Date.now()>r.expires?(this.cache.delete(e),null):r.data:null}clear(){this.cache.clear()}size(){return this.cache.size}}const k=new J,X=(o,e,r="options")=>{const{i18n:f}=F(),[A,E]=a.useState(!0),[p,b]=a.useState(null),[i,w]=a.useState({options:[],placeholder:void 0,label:void 0,loading:!0,error:null}),s=a.useRef(null),_=f.language||"en",g=a.useCallback(async()=>{var c,u,l,v,K,m,I,x,S,j;try{E(!0),b(null),s.current&&s.current.abort(),s.current=new AbortController;const d=`dropdown_${o}_${_}`,y=k.get(d);let n;if(y),n=y;else{const h=await fetch(`/api/dropdowns/${o}/${_}`,{signal:s.current.signal});if(!h.ok)throw new Error(`HTTP ${h.status}: ${h.statusText}`);if(n=await h.json(),n.status!=="success")throw new Error(`API Error: ${n.status}`);k.set(d,n),}let $=`${o}_${e}`,B=`${$}_ph`,R=`${$}_label`,P=((c=n.options)==null?void 0:c[$])||[],O=((u=n.placeholders)==null?void 0:u[B])||((l=n.placeholders)==null?void 0:l[$]),H=((v=n.labels)==null?void 0:v[R])||((K=n.labels)==null?void 0:K[$]);if(P.length===0){const h=e==="field_of_activity"?"activity":e==="activity"?"field_of_activity":null;if(h){const D=`${o}_${h}`,U=`${D}_ph`,q=`${D}_label`,z=((m=n.options)==null?void 0:m[D])||[];z.length>0&&(,$=D,B=U,R=q,P=z,O=((I=n.placeholders)==null?void 0:I[U])||((x=n.placeholders)==null?void 0:x[D]),H=((S=n.labels)==null?void 0:S[q])||((j=n.labels)==null?void 0:j[D]))}}const C={options:P,placeholder:O,label:H,loading:!1,error:null};,w(C)}catch(d){if(d.name==="AbortError"){return}console.warn(`❌ Dropdown API error for ${o}/${e}:`,d);const y=d instanceof Error?d:new Error("Unknown error");b(y),w({options:[],placeholder:void 0,label:void 0,loading:!1,error:y})}finally{E(!1),s.current=null}},[o,e,_]);a.useEffect(()=>(g(),()=>{s.current&&s.current.abort()}),[g]);const t={...i,loading:A,error:p};return r==="options"&&!A&&!p?t.options:t},Y=o=>{const{i18n:e}=F(),[r,f]=a.useState(!0),[A,E]=a.useState(null),[p,b]=a.useState(null),i=a.useRef(null),w=e.language||"en",s=a.useCallback(async()=>{var g;try{f(!0),E(null),i.current&&i.current.abort(),i.current=new AbortController;const t=`dropdown_${o}_${w}`,c=k.get(t);if(c){,b(c);return}const u=await fetch(`/api/dropdowns/${o}/${w}`,{signal:i.current.signal});if(!u.ok)throw new Error(`HTTP ${u.status}: ${u.statusText}`);const l=await u.json();if(l.status!=="success")throw new Error(`API Error: ${l.status}`);k.set(t,l),b(l),==null?void 0:g.length)||0,optionGroups:Object.keys(l.options||{}).length,cacheInfo:l.cache_info})}catch(t){if(t.name==="AbortError"){return}console.warn(`❌ Bulk dropdown API error for ${o}:`,t);const c=t instanceof Error?t:new Error("Unknown error");E(c),b(null)}finally{f(!1),i.current=null}},[o,w]);return a.useEffect(()=>(s(),()=>{i.current&&i.current.abort()}),[s]),{data:p,loading:r,error:A,getDropdownProps:g=>{var c,u,l;if(!p)return{options:[],placeholder:void 0,label:void 0};const t=`${o}_${g}`;return{options:((c=p.options)==null?void 0:c[t])||[],placeholder:(u=p.placeholders)==null?void 0:u[t],label:(l=p.labels)==null?void 0:l[t]}},refresh:s,clearCache:()=>k.clear()}};export{X as a,Y as u};
