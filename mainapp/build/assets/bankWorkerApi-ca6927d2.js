import{a9 as p}from"./utils-vendor-dcc8b708.js";const c={}.REACT_APP_API_URL||"http://localhost:8003",s=p.create({baseURL:c,timeout:3e4,headers:{"Content-Type":"application/json"}});s.interceptors.request.use(o=>{var e,r;const t=localStorage.getItem("adminToken");return t&&((e=o.url)!=null&&e.includes("/admin/"))&&(o.headers.Authorization=`Bearer ${t}`),console.log(`API Request: ${(r=o.method)==null?void 0:r.toUpperCase()} ${o.url}`,o.data),o},o=>(console.error("API Request Error:",o),Promise.reject(o)));s.interceptors.response.use(o=>{var t;return console.log(`API Response: ${(t=o.config.method)==null?void 0:t.toUpperCase()} ${o.config.url}`,o.data),o},o=>{var t,e;return console.error("API Response Error:",((t=o.response)==null?void 0:t.data)||o.message),((e=o.response)==null?void 0:e.status)===401&&(localStorage.removeItem("adminToken"),window.location.pathname.includes("/admin/")&&(window.location.href="/admin")),Promise.reject(o)});class d{async getRegistrationForm(t){var e,r;try{return(await s.get(`/api/bank-worker/register/${t}`)).data}catch(a){throw new Error(((r=(e=a.response)==null?void 0:e.data)==null?void 0:r.message)||"Failed to load registration form")}}async completeRegistration(t){var e,r;try{return(await s.post("/api/bank-worker/register",t)).data}catch(a){throw new Error(((r=(e=a.response)==null?void 0:e.data)==null?void 0:r.message)||"Registration failed")}}async getWorkerStatus(t){var e,r;try{return(await s.get(`/api/bank-worker/status/${t}`)).data}catch(a){throw new Error(((r=(e=a.response)==null?void 0:e.data)==null?void 0:r.message)||"Failed to get worker status")}}async sendInvitation(t){var e,r;try{return(await s.post("/api/bank-worker/invite",t)).data}catch(a){throw new Error(((r=(e=a.response)==null?void 0:e.data)==null?void 0:r.message)||"Failed to send invitation")}}async getInvitations(t){var e,r;try{return(await s.get("/api/admin/invitations",{params:t})).data}catch(a){throw new Error(((r=(e=a.response)==null?void 0:e.data)==null?void 0:r.message)||"Failed to get invitations")}}async getApprovalQueue(t){var e,r;try{return(await s.get("/api/admin/approval-queue",{params:t})).data}catch(a){throw new Error(((r=(e=a.response)==null?void 0:e.data)==null?void 0:r.message)||"Failed to get approval queue")}}async approveWorker(t,e){var r,a;try{return(await s.post(`/api/admin/approve/${t}`,{comments:e})).data}catch(n){throw new Error(((a=(r=n.response)==null?void 0:r.data)==null?void 0:a.message)||"Failed to approve worker")}}async rejectWorker(t,e,r){var a,n;try{return(await s.post(`/api/admin/reject/${t}`,{reason:e,comments:r})).data}catch(i){throw new Error(((n=(a=i.response)==null?void 0:a.data)==null?void 0:n.message)||"Failed to reject worker")}}async getBanks(){var t,e;try{return(await s.get("/api/admin/banks")).data}catch(r){throw new Error(((e=(t=r.response)==null?void 0:t.data)==null?void 0:e.message)||"Failed to get banks")}}}const l=new d;export{l as b};
